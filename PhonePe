# Cloning GitHub Repositary

!git clone https://github.com/PhonePe/pulse.git

# Importing required Libraries

import pandas as pd
import os
import json

# Extracting Data

path = "/content/pulse/data/aggregated/transaction/country/india/state/"
Agg_state_list = os.listdir(path)
Agg_state_list
Path1 ={'State':[], 'Year':[],'Quarter':[],'Transaction_type':[], 'Transaction_count':[], 'Transaction_amount':[]}
for i in Agg_state_list:
  p_i=path+i+"/"
  Agg_yr=os.listdir(p_i)    
  for j in Agg_yr:
    p_j=p_i+j+"/"
    Agg_yr_list=os.listdir(p_j)        
    for k in Agg_yr_list:
      p_k=p_j+k
      Data=open(p_k,'r')
      D=json.load(Data)
      for z in D['data']['transactionData']:
        Name=z['name']
        count=z['paymentInstruments'][0]['count']
        amount=z['paymentInstruments'][0]['amount']
        Path1['Transaction_type'].append(Name)
        Path1['Transaction_count'].append(count)
        Path1['Transaction_amount'].append(amount)
        Path1['State'].append(i)
        Path1['Year'].append(j)
        Path1['Quarter'].append(int(k.strip('.json')))
Agg_Transactions = pd.DataFrame(Path1)
Agg_Transactions

path  = "/content/pulse/data/top/transaction/country/india/state/"
Top_state_list = os.listdir(path)
Top_state_list
Path2 = {'State': [], 'Year': [], 'Quater': [], 'District_name': [], 'Transaction_count': [], 'Transaction_amount': []}
for i in Top_state_list:
    p_i = path + i + "/"
    Top_yr = os.listdir(p_i)
    for j in Top_yr:
        p_j = p_i + j + "/"
        Top_yr_list = os.listdir(p_j)
        for k in Top_yr_list:
            p_k = p_j + k
            Data = open(p_k, 'r')
            D = json.load(Data)
            for z in D['data']['districts']:
                name = z['entityName']
                count = z['metric']['count']
                amount = z['metric']['amount']
                Path2['District_name'].append(Name)
                Path2['Transaction_count'].append(count)
                Path2['Transaction_amount'].append(amount)
                Path2['State'].append(i)
                Path2['Year'].append(j)
                Path2['Quater'].append(int(k.strip('.json')))
Top_Transactions = pd.DataFrame(Path2)
Top_Transactions

path  = "/content/pulse/data/map/transaction/hover/country/india/state/"
Map_state_list = os.listdir(path)
Map_state_list

Path3 = {'State': [], 'Year': [], 'Quater': [], 'District_name': [], 'Transaction_count': [], 'Transaction_amount': []}
for i in Map_state_list:
    p_i = path + i + "/"
    Map_yr = os.listdir(p_i)
    for j in Map_yr:
        p_j = p_i + j + "/"
        Map_yr_list = os.listdir(p_j)
        for k in Map_yr_list:
            p_k = p_j + k
            Data = open(p_k, 'r')
            D = json.load(Data)
            for z in D['data']['hoverDataList']:
                Name = z['name']
                count = z['metric'][0]['count']
                amount = z['metric'][0]['amount']
                Path3['District_name'].append(Name)
                Path3['Transaction_count'].append(count)
                Path3['Transaction_amount'].append(amount)
                Path3['State'].append(i)
                Path3['Year'].append(j)
                Path3['Quater'].append(int(k.strip('.json')))
Map_Transactions = pd.DataFrame(Path3)
Map_Transactions

path  = "/content/pulse/data/top/user/country/india/state/"
Top_user = os.listdir(path)
Top_user

Path4 = {'State': [], 'Year': [], 'Quater': [], 'District': [],
        'RegisteredUser': []}
for i in Top_user:
  p_i = path + i + "/"
  Agg_yr = os.listdir(p_i)
  for j in Agg_yr:
    p_j = p_i + j + "/"
    Agg_yr_list = os.listdir(p_j)
    for k in Agg_yr_list:
      p_k = p_j + k
      Data = open(p_k, 'r')
      F = json.load(Data)
      for t in F['data']['pincodes']:
        Name = t['name']
        registeredUser = t['registeredUsers']
        Path4['District'].append(Name)
        Path4['RegisteredUser'].append(registeredUser)
        Path4['State'].append(i)
        Path4['Year'].append(j)
        Path4['Quater'].append(int(k.strip('.json')))
Top_user = pd.DataFrame(Path4)
Top_user

# Converting to Csv

Agg_Transactions.to_csv("Agg Transactions.csv")
Top_Transactions.to_csv("Top Transactions.csv")
Map_Transactions.to_csv("Map Transactions.csv")
Top_user.to_csv("Top_user.csv")

# Connecting Sql

!pip install sqlite3
import sqlite3
connect = sqlite3.connect("PhonePe Pulse.db")
connect

Agg_Transactions.to_sql("Aggregated Transactions", connect, if_exists = "replace")
Top_Transactions.to_sql("Top_Transactions", connect, if_exists = "replace")
Map_Transactions.to_sql("Map_Transactions", connect, if_exists = "replace")
Top_user.to_sql("Top_user", connect, if_exists = "replace")
